@using BackOffice.Translates
@model BackOffice.Areas.LykkePay.Models.Merchants.MerchantTransferSettingsListViewModel
@if (Model.Settings != null && Model.Settings.Any())
{
    @Html.RenderPagination(Model.PageSize, Model.Count, Model.CurrentPage, "MerchantTransferSettingsList", "frmMerchantTransferSettingsPage", "merchantTransferSettingsList")
    <table class="table table-striped">
        <tr>
            <th>
                Rule id
            </th>
            <th>
                Rule name
            </th>
            <th>
                Rule input
            </th>
            <th>
                Enabled
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Settings)
        {
            <tr>
                <td>
                    @item.RuleId
                </td>
                <td>
                    @item.RuleDisplayName
                </td>
                <td>
                    @item.RuleInput
                </td>
                <td>
                    @item.Enabled
                </td>
                <td style="text-align: right">

                    @if (Model.IsEditAccess || Model.IsFullAccess)
                    {
                        <button class="btn btn-xs btn-default btn-raised"
                                onclick="ui.showDialog('@Url.Action("AddOrEditMerchantTransferSettingDialog")', { merchantId: '@Model.SelectedMerchant', ruleId: '@item.RuleId'});">
                            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                        </button>
                    }

                    @if (Model.IsFullAccess)
                    {
                        <button class="btn btn-xs btn-danger btn-raised"
                                onclick="ui.showDialog('@Url.Action("DeleteMerchantTransferSettingsDialog")', { merchantId: '@Model.SelectedMerchant', ruleId: '@item.RuleId', ruleDisplayName: '@item.RuleDisplayName' });">
                            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                        </button>
                    }

                    @if (Model.IsEditAccess || Model.IsFullAccess)
                    {
                        <button class="btn btn-success btn-xs" onclick="enableRule('@Model.SelectedMerchant', '@item.RuleId', '@Url.Action("EnableRule")', this)">
                            <span class="glyphicon glyphicon-pencil" aria-hidden="true">Enable</span>
                        </button>

                        <button class="btn btn-success btn-xs" onclick="disableRule('@Model.SelectedMerchant', '@item.RuleId', '@Url.Action("DisableRule")', this)">
                            <span class="glyphicon glyphicon-pencil" aria-hidden="true">Disable</span>
                        </button>
                    }
                </td>
            </tr>
        }
    </table>
}
else
{
    <div class="row">
        <p>@Phrases.NoRecordsFound</p>
    </div>
}

<script>
    function enableRule(merchantId, ruleId, methodUrl, initiator) {
        requests.doRequest({
            url: methodUrl,
            params: { merchantId: merchantId, ruleId: ruleId },
            onStart: function() { $(initiator).prop('disabled', true); }
        });
    }

    function disableRule(merchantId, ruleId, methodUrl, initiator) {
        requests.doRequest({
            url: methodUrl,
            params: { merchantId: merchantId, ruleId: ruleId },
            onStart: function () { $(initiator).prop('disabled', true); }
        });
    }
</script>