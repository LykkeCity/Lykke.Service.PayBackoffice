@using BackOffice.Translates
@model BackOffice.Areas.LykkePay.Models.AddOrEditMerchantDialogViewModel

@{
    Layout = "~/Views/Shared/_PersonalAreaDialog.cshtml";
}

<form id="frmMerchant" autocomplete="off" style="max-height: 700px;overflow: auto;">
    @Html.HiddenFor(x => x.IsNewMerchant)
    @Html.HiddenFor(x => x.Id)

    <div id="errorMessage"></div>
    @if (Model.IsNewMerchant)
    {
        <div class="form-group">
            @Html.RenderInputWithLabelOnTop("Name", "MerchantId", Model.Name, placeHolder: "abbreviation of the company to be used as ID", focused: true, required: true)
        </div>
    }
    else
    {
        @Html.HiddenFor(x => x.Name)
    }
    <div class="form-group">
        @Html.RenderInputWithLabelOnTop("DisplayName", "DisplayName", Model.DisplayName, placeHolder: "full name of the company", required: true)
    </div>
    <div class="form-group">
        @Html.RenderInputWithLabelOnTop("LwId", "LwId", Model.LwId, placeHolder: "ID in LykkeWallet")
    </div>
    <div class="form-group">
        @Html.RenderInputWithLabelOnTop("ApiKey", "ApiKey", Model.ApiKey, placeHolder: "will be generated automatically if not filled")
    </div>
    <div class="form-group">
        @(string.IsNullOrEmpty(Model.Email) ? @Html.RenderInputWithLabelOnTop("Email", "Email", Model.Email) : @Html.RenderInputWithLabelOnTopReadOnly("Email", Model.Email, name: "Email"))
    </div>
</form>
@Html.RenderSaveCancelButtonPair(Url.Action("AddOrEditMerchant"), "#frmMerchant")