@using BackOffice.Models
@using BackOffice.Translates
@model BackOffice.Areas.LykkePay.Models.Merchants.AddOrEditMerchantTransferSettingsDialog

@{
    Layout = "~/Views/Shared/_PersonalAreaDialog.cshtml";
}
@{
    IEnumerable<ItemViewModel> ruleList = Model.RuleList.
        Select(m => new ItemViewModel {Id = m.Id, Title = m.DisplayName, Selected = (m.Id == Model.RuleId)}).ToArray();

    string currentRuleDisplayName = string.IsNullOrEmpty(Model.RuleId) 
        ? string.Empty 
        : Model.RuleList.SingleOrDefault(x => x.Id == Model.RuleId)?.DisplayName;
}

<form id="frmMerchantTransferSetting" autocomplete="off" style="max-height: 700px;overflow: auto;">
    @Html.HiddenFor(x => x.MerchantId)
    @Html.HiddenFor(x => x.IsNew)
    @Html.HiddenFor(x => x.Enabled)
    @if (!Model.IsNew)
    {
        @Html.HiddenFor(x => x.RuleId)
    }

    <div id="errorMessage"></div>

    <div class="form-group">
        @if (Model.IsNew)
        {
            @Html.RenderSelect2("Rule", "RuleId", ruleList, false, "Select rule ...")
        }
        else
        {
            @Html.RenderInputWithLabelOnTopReadOnly("Rule", currentRuleDisplayName)
        }
    </div>
    <div class="form-group">
        @Html.RenderTextAreaWithLabelOnTop("RuleInput", "Rule input", Model.RuleInput, "Please, add valid json...")
    </div>
</form>
@Html.RenderSaveCancelButtonPair(Url.Action("AddOrEditMerchantTransferSetting"), "#frmMerchantTransferSetting")
<script>
    $("[name='Enabled']").change(function(e) {
        $("#Enabled").val(e.currentTarget.checked);
    });
</script>