@model BackOffice.Areas.LykkePay.Models.MarkupsListViewModel
@using BackOffice.Models
@{
    List<ItemViewModel> merchantList = new List<ItemViewModel>();
    merchantList.Add(new ItemViewModel()
    {
        Id = "Default",
        Title = "Default",
        Selected = true
    });
    merchantList.AddRange(Model.Merchants.Select(m => new ItemViewModel { Id = m.Id, Title = m.Name }).ToList());
}
<div>
    <h1>Markups</h1>
    <hr />
    <form id="frmMarkupsPage">
        @Html.HiddenFor(x => x.CurrentPage)
        @Html.HiddenFor(x => x.PageSize)
        <div class="row">
            <div class="col-md-1">
                @if (Model.IsFullAccess)
                {
                    <a class="btn btn btn-success"
                       onclick="openDialog();">
                        Add
                    </a>
                }
            </div>
            <div class="col-md-2 col-md-offset-0 input-lg">
                @Html.RenderSelect2("", "SelectedMerchant", merchantList, false, "Select merchant...")
            </div>
        </div>
    </form>
    <div id="markupsList"></div>
</div>

<script>
    $(function () {
            var $merchantSelect = $('#selectedMerchant');
            $merchantSelect.select2().on("change",
                function (e) {
                    requests.doRequest({
                        url: '@Url.Action("MarkupsList")',
                        formId: '#frmMarkupsPage',
                        divResult: '#markupsList'
                    });
                });
            $('.select2-container--default').width(200);
    });
    function openDialog()
    {
        var $merchantSelect = $('#selectedMerchant');
        ui.showDialog('@Url.Action("AddOrEditMarkupDialog")', { selectedMerchant: $merchantSelect.val() });
    }
    $(function () {
        requests.doRequest({ url: '@Url.Action("MarkupsList")', formId: '#frmMarkupsPage', divResult: '#markupsList' });
    });
</script>