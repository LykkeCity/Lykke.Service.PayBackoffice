@using BackOffice.Translates
@model BackOffice.Areas.LykkePay.Models.AddStaffDialogViewModel

@{
    Layout = "~/Views/Shared/_PersonalAreaDialog.cshtml";

    IEnumerable<SelectListItem> merchantsList = Model.Merchants.
        Select(x => new SelectListItem { Value = x.Id, Text = x.Name }).ToArray();
}

<form id="frmAddStaffToMerchant" autocomplete="off">
    <div id="errorMessage"></div>
    @Html.HiddenFor(x => x.IsNewStaff)
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.SelectedMerchant)
    @if (!Model.IsNewStaff)
    {
        <div class="form-group">
            @Html.CheckBoxFor(x=>x.IsBlocked) Blocked
        </div>
    }
    <div class="form-group">
        @Html.RenderInputWithLabelOnTop("FirstName", "FirstName", Model.FirstName)
    </div>
    <div class="form-group">
        @Html.RenderInputWithLabelOnTop("LastName", "LastName", Model.LastName)
    </div>
    <div class="form-group">
        @(Model.IsNewStaff ? @Html.RenderInputWithLabelOnTop("Email", "Email") :
            @Html.RenderInputWithLabelOnTopReadOnly("Email", Model.Email, name: "Email"))
    </div>
    <div class="form-group">
        @Html.RenderInputWithLabelOnTop("Password", "Password", Model.Password)
        <a onclick="getPassword()">Generate</a>
    </div>
</form>

@Html.RenderSaveCancelButtonPair(Url.Action("AddOrEditStaff"), "#frmAddStaffToMerchant")
<script>
    $(function () {
        $('#SelectedMerchant').val('@Model.SelectedMerchant');
    });
    function getPassword()
    {
        var pass = generatePassword();
        $("#password").val(pass);
    }
    function generatePassword(len) {
            var length = (len)?(len):(8);
            var string = "abcdefghijklmnopqrstuvwxyz"; //to upper
            var numeric = '0123456789';
            var punctuation = '!#$&*()_+|}{[]\:;?><,./-=';
            var password = "";
            var character = "";
            var crunch = true;
            while( password.length<length ) {
                entity1 = Math.ceil(string.length * Math.random()*Math.random());
                entity2 = Math.ceil(numeric.length * Math.random()*Math.random());
                entity3 = Math.ceil(punctuation.length * Math.random()*Math.random());
                hold = string.charAt( entity1 );
                hold = (entity1%2==0)?(hold.toUpperCase()):(hold);
                character += hold;
                character += numeric.charAt( entity2 );
                character += punctuation.charAt( entity3 );
                password = character;
            }
            return password;
        }

</script>